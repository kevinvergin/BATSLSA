% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spectral_cluster_processing.R,
%   R/spectral_cluster_sort.R
\name{clustlist}
\alias{clustlist}
\alias{clustlist}
\title{Spectral Cluster Sorting}
\usage{
clustlist(matrix, i = 1, n = 1, clusts = list())

clustlist(matrix, i = 1, n = 1, clusts = list())
}
\arguments{
\item{inputParameter1}{matrix is the similarity matrix from the spectral clustering script
\code{inputParameter1}}

\item{inputParameter2}{list is the output from the clustlist script
\code{inputParameter2}}

\item{inputParameter3}{vector is a vector of NTU names
\code{inputParameter3}}

\item{inputParameter4}{matrix2 is the combined results from the clustsort script (assuming multiple kernels)
\code{inputParameter4}}

\item{inputParameter5}{fn3 is a file name for the clust_sim2 results
\code{inputParameter5}}

\item{inputParameter6}{matrix3 is the results from the clust_sim2 script
code{inputParameter6}}

\item{inputParameter1}{matrix is the similarity matrix from the spectral clustering script
\code{inputParameter1}}
}
\value{
output a final list of NTUs in each cluster after considering all kernels

output a list of NTUs in each cluster (arbitrarily numbered)
}
\description{
This analysis converts the results of the spectral clustering similarity matrix
to lists of NTUs belonging to each cluster in several steps. First, clustlist is used to convert the
results of the clustering analysis to a list of NTUs in each cluster (greater than 50% similarity).
The second step is to convert the list to a column of a matrix. A new matrix can be constructed for
each kernel type. The third step is to combine the cluster assignments to a new matrix using cbind (this
step is not included in this script). The fourth step uses clust_sim2 to make a new similarity
matrix based on cluster assignments. The fifth and final step is to create the final list of
cluster assignments (incorporating all kernel results) using clustlist2 using a greater than 75%
similarity cutoff.

This analysis converts the results of the spectral clustering similarity matrix
to lists of NTUs belonging to each cluster.
}
\examples{
Run scripts with these commands:  list1 <- clustlist(matrix=)
kernelmat <- clustsort(list=list1,vector=ntunames)
newmat <- clust_sim2(vector=ntunames,matrix2=cbind(kernelmat1[,2],kernelmat2[,2],etc),fn3=filename)
finallist <- clustlist2(matrix3=newmat)

Run script with this command:  list1 <- clustlist(matrix=)

}
\keyword{keywords}
